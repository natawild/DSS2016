/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dss.gui;


import dss.classes.Conta;
import dss.classes.Divida;
import dss.classes.Emprestimo;
import dss.classes.Facade;
import dss.classes.Pagamento;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author gil
 */
public class ConsultarConta extends javax.swing.JDialog {
    private String emailUser;
    private int i;
    private Facade f;
    /**
     * Creates new form VerMensagemAdmin
     */
    public ConsultarConta (java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.i=0;
    }
    
    public ConsultarConta (String email) throws SQLException {
      this.emailUser=email;
      i=0;
      initComponents();
      f=new Facade();
      
      List<Conta> mensagemUser = f.getContaPorPagar(this.emailUser);
      
      if(mensagemUser.isEmpty()) {
      
           JOptionPane.showMessageDialog(null, "Não têm conta a pagar");
          this.mensagem.setText("");
          
      }
      else {
          
          
      
           Conta m = mensagemUser.get(i);
           Pagamento p = f.getPagamentoUser(email, m.getIdentificador());
           
                  
                  this.mensagem.setText(m.toString() +"\n"+p.imprimePagamento());
          
      
      }
      this.mensagem.setEditable(false);
      
      this.idDividaLabel.setVisible(false);
      this.identificadorDivida.setVisible(false);
      this.ok.setVisible(false);
      this.valorApagarLabel.setVisible(false);
      this.valorDivida.setVisible(false);
      
      
      
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mensagem = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        sair = new javax.swing.JButton();
        pagar = new javax.swing.JButton();
        idDividaLabel = new javax.swing.JLabel();
        identificadorDivida = new javax.swing.JTextField();
        valorApagarLabel = new javax.swing.JLabel();
        valorDivida = new javax.swing.JTextField();
        ok = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Contas");

        mensagem.setColumns(20);
        mensagem.setRows(5);
        jScrollPane1.setViewportView(mensagem);

        jButton1.setText("seguinte");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel2.setText(">");

        jButton2.setText("anterior");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jLabel3.setText("<");

        sair.setText("Voltar ao menu Inicial");
        sair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sairMouseClicked(evt);
            }
        });

        pagar.setText("Pagar");
        pagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pagarMouseClicked(evt);
            }
        });

        idDividaLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        idDividaLabel.setText("Identificador do Pagamento");

        valorApagarLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        valorApagarLabel.setText("Valor a pagar");

        ok.setText("Pagar");
        ok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okMouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/15749738_10208020464682452_1065624881_n.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idDividaLabel)
                    .addComponent(valorDivida, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jButton2)
                .addGap(166, 166, 166)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(sair))
            .addGroup(layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(identificadorDivida, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(valorApagarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idDividaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(valorDivida, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(54, 54, 54)
                .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(identificadorDivida, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(valorApagarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(352, 352, 352)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGap(352, 352, 352)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(429, 429, 429)
                .addComponent(pagar))
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sairMouseClicked
        try {
            // TODO add your handling code here:
            new InicioComCasa(emailUser).setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(VerEmprestimos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
    }//GEN-LAST:event_sairMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            // TODO add your handling code here:
            List<Conta> mensagemUser=new ArrayList<>();
             
           mensagemUser = f.getContaPorPagar(this.emailUser);
           
           
           i++;
            if(i>=mensagemUser.size()) {
            
                JOptionPane.showMessageDialog(null, "Nao tem mais contas");
            
            }
            else {
                if(mensagemUser.isEmpty()) {
                
                     JOptionPane.showMessageDialog(null, "Nao tem mais contas");
                    
                }
                else {
                
                
                   Conta m = mensagemUser.get(i);
                   Pagamento p = f.getPagamentoUser(this.emailUser, m.getIdentificador());
            
                  this.mensagem.setText("");
                  this.mensagem.setText(m.toString() +"\n"+p.imprimePagamento());
                }
            }
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(VerEmprestimos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        try {
            // TODO add your handling code here:
            List<Conta> mensagemUser=new ArrayList<>();
            
      
           mensagemUser = f.getContaPorPagar(this.emailUser);
            i--;
            
            if(i<0) {
                
                JOptionPane.showMessageDialog(null, "Nao pode andar mais para trás");
                
                
            }
            else {
                if(mensagemUser.isEmpty()) {
                
                     JOptionPane.showMessageDialog(null, "Nao tem contas a pagar");
                    
                }
                else {
                   
                Conta m = mensagemUser.get(i);
                   
                  Pagamento p = f.getPagamentoUser(this.emailUser, m.getIdentificador());
            
                  this.mensagem.setText("");
                  this.mensagem.setText(m.toString() +"\n"+p.imprimePagamento());
                    
                }
                
                
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(VerEmprestimos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void pagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pagarMouseClicked
        // TODO add your handling code here:
        
      this.idDividaLabel.setVisible(true);
      this.identificadorDivida.setVisible(true);
      this.ok.setVisible(true);
      this.valorApagarLabel.setVisible(true);
      this.valorDivida.setVisible(true);
      this.pagar.setVisible(false);
        
        
        
    }//GEN-LAST:event_pagarMouseClicked

    private void okMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okMouseClicked
        // TODO add your handling code here:
        try {
        int id =Integer.parseInt(this.identificadorDivida.getText());
        
        if(f.verificaConta(this.emailUser,id)==0) {
           JOptionPane.showMessageDialog(null, "Id invalido");
           
            
        }
           
        else {
            
             float valorInt = Float.parseFloat(this.valorDivida.getText());
              float contaUser =f.getDinheiro(emailUser);
              float valorContaPago=f.getValorPago(id);
              float verContaTotal =f.valorConta(id);
              int numeroPessoasPagaram = f.nrPessoasPagaram(id);
              int numeroPessoasApagar= f.nrPessoasApagar(id);
              
              if(valorContaPago ==verContaTotal && numeroPessoasApagar == numeroPessoasPagaram )
              {
                 JOptionPane.showMessageDialog(null, "Conta já foi paga");
              }
              else {
                  valorContaPago = valorContaPago+valorInt;
              
              if(contaUser>=valorInt) {
              float ultimo=f.verUltimo(id);
              
             float valor =f.getValorPagamento(this.emailUser,id);
             if(valor ==valorInt && ultimo==-1 ) {
               f.pagarConta(id,this.emailUser,valor);
              
              
               this.mensagem.setText("");
               JOptionPane.showMessageDialog(null, "Conta paga");
                 
             }
             else {
                   
                   
                   
                   if(valorInt>verContaTotal || valorContaPago > verContaTotal) {
                   
                       JOptionPane.showMessageDialog(null, "Valor excede o valor da conta");
                   }
                   else {
                   
                   if(valorInt>valor && ultimo ==-1 ) {
                       String nome = f.getNome(emailUser);
                       Emprestimo e = new Emprestimo(emailUser, nome, (valorInt-valor),new GregorianCalendar());
                       f.emprestimo(e);
                     f.pagarConta(id, emailUser, valorInt);
                     JOptionPane.showMessageDialog(null, "Conta paga");
                     
                     
                 }
                 else {
                   
                       if(valorInt<valor && ultimo ==-1) {
                          String nome = f.getNome(emailUser);
                          Divida d = new Divida(emailUser, nome, (valor-valorInt),new GregorianCalendar(),0);
                          f.divida(d);
                          f.pagarConta(id, emailUser, valorInt);
                         JOptionPane.showMessageDialog(null, "Conta paga");
                       }
                       
                       else {
                           
                           if(valorInt==ultimo && valorInt==valor) {
                               
                               f.pagarConta(id, emailUser, valorInt);
                               JOptionPane.showMessageDialog(null, "Conta paga");
                           
                           }
                           
                           else { 
                                  if(valorInt==ultimo && valorInt<valor) {
                                  
                                      String nome = f.getNome(emailUser);
                                       Divida d = new Divida(emailUser, nome, (valor-valorInt),new GregorianCalendar(),0);
                                        f.divida(d);
                                        f.pagarConta(id, emailUser, valorInt);
                                       JOptionPane.showMessageDialog(null, "Conta paga");
                                      
                                      
                                      
                                  }
                                  
                                  else {
                                        if(valorInt==ultimo && valorInt>valor) {
                                         String nome = f.getNome(emailUser);
                                         Emprestimo e = new Emprestimo(emailUser, nome, (valorInt-valor),new GregorianCalendar());
                                         f.emprestimo(e);
                                         f.pagarConta(id, emailUser, valorInt);
                                         JOptionPane.showMessageDialog(null, "Conta paga");
                                        }
                                        
                                        else {
                                        
                                            JOptionPane.showMessageDialog(null, "Como é o utlimo o valor a pagar é " +ultimo+"");
                                            
                                        
                                        }
                                      
                                  
                                  }
                               
                               
                           
                           }
                           
                       
                           
                           
                       
                       }
                       
                       
                       
                       
                       
                       
                       
                   
                   
                   }
                 
             
                  
                  
                 
             }
                   
             }
            
        
        }
              else  JOptionPane.showMessageDialog(null, "Nao possui dinheiro na conta");
        }
        }
        
        
        }
        catch(Exception e) {
        
            JOptionPane.showMessageDialog(null, "Valor invalido");
            
        
        }
         i=0;
        this.valorDivida.setText("");
        this.identificadorDivida.setText("");
        this.mensagem.setText("");
        
     
        
        
        
        
    }//GEN-LAST:event_okMouseClicked

    
    
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel idDividaLabel;
    private javax.swing.JTextField identificadorDivida;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mensagem;
    private javax.swing.JButton ok;
    private javax.swing.JButton pagar;
    private javax.swing.JButton sair;
    private javax.swing.JLabel valorApagarLabel;
    private javax.swing.JTextField valorDivida;
    // End of variables declaration//GEN-END:variables
}
