/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dss.gui;

import dss.classes.Facade;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author gil
 */
public class RemoverDoGrupo extends javax.swing.JDialog {
   private Facade f;
   private String emailUser;
   private DefaultListModel dlm = new DefaultListModel();
   private DefaultListModel dlm2 = new DefaultListModel();
   private List<String> a;
    /**
     * Creates new form RemoverDoGrupo
     */
    public RemoverDoGrupo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public RemoverDoGrupo(String email) throws SQLException {
    
        this.emailUser=email;
       this.f=new Facade();
       initComponents();
       this.a=new ArrayList<>();
       
        List<String> userCasa = f.getEmailMensagem(this.emailUser);
         for (String e : userCasa) {
               dlm.addElement(e);
               
           }
         this.utilizadoresCasa.setModel(dlm);
         
         this.label.setVisible(false);
         this.removerUtilizador.setVisible(false);
         this.remover.setVisible(false);
         this.utilizadoresSelecionados.setVisible(false);
        
        
        
    
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        utilizadoresCasa = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        utilizadoresSelecionados = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        removerUtilizador = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        remover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        utilizadoresCasa.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(utilizadoresCasa);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Utilizadores Casa");

        label.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        label.setText("Utilizadores Selecionados");

        utilizadoresSelecionados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(utilizadoresSelecionados);

        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setText("voltar ao menu anterior");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        removerUtilizador.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        removerUtilizador.setText("Remover Utilizadores da Casa");
        removerUtilizador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removerUtilizadorMouseClicked(evt);
            }
        });

        jButton3.setText("adcionar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        remover.setText("remover");
        remover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                        .addComponent(removerUtilizador)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addComponent(remover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(remover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removerUtilizador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
       try {
           // TODO add your handling code here:
           new Administrar(emailUser).setVisible(true);
           this.dispose();
       } catch (SQLException ex) {
           Logger.getLogger(RemoverDoGrupo.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        
         
         
          DefaultListModel model = (DefaultListModel) utilizadoresCasa.getModel();
        int selectedIndex = utilizadoresCasa.getSelectedIndex();
        if (selectedIndex != -1) {
            
            this.label.setVisible(true);
           this.removerUtilizador.setVisible(true);
           this.remover.setVisible(true);
           this.utilizadoresSelecionados.setVisible(true);
            a.add(this.utilizadoresCasa.getSelectedValue());
            dlm2.addElement(this.utilizadoresCasa.getSelectedValue());
            model.remove(selectedIndex);
            
        
        }
       
       
       this.utilizadoresSelecionados.setModel(dlm2);
       
        
        
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void removerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removerMouseClicked
        // TODO add your handling code here:
        
        
        
        
        DefaultListModel model = (DefaultListModel) utilizadoresSelecionados.getModel();
        int selectedIndex = utilizadoresSelecionados.getSelectedIndex();
        if (selectedIndex != -1) {
             dlm.addElement(this.utilizadoresSelecionados.getSelectedValue());
            a.remove(this.utilizadoresSelecionados.getSelectedValue());
            model.remove(selectedIndex);
        }
        
        this.utilizadoresCasa.setModel(dlm);
        
        
        
    }//GEN-LAST:event_removerMouseClicked

    private void removerUtilizadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removerUtilizadorMouseClicked
        // TODO add your handling code here:
        
        if(a.isEmpty()) {
        
            JOptionPane.showMessageDialog(null, "Não selecionou utilizadores para remover ");
        
        }
        else {
             try {
             for(String emailR : this.a) {
                 
            
                 int valor = f.removerUser(emailR);
                   
                    if(valor ==-1) {
                    
                        JOptionPane.showMessageDialog(null, "Impossivel de remover o utilizador " +emailR + " porque deve dinheiro a casa");
                        
                    }
                    else {
                           if(valor ==-2) {
                           
                             JOptionPane.showMessageDialog(null, "Impossivel de remover o utilizador " +emailR + " porque a casa lhe deve");  
                           }
                           
                           else {
                                  if(valor ==-3) {
                                  
                                      JOptionPane.showMessageDialog(null, "Impossivel de remover o utilizador " +emailR + " porque ainda tem contas a pagar");
                                      
                                  }
                                  else {
                                  
                                      JOptionPane.showMessageDialog(null, "Utilizador " +emailR + " removido com sucesso");
                                      
                                  
                                  }
                                 
                           }
                        
                    }
                    
                    }
        
             } catch(Exception e) {
             
                  JOptionPane.showMessageDialog(null, "Erro ao remover utilizadores ");
             }
             
            try {
                new Administrar(emailUser).setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(RemoverDoGrupo.class.getName()).log(Level.SEVERE, null, ex);
            }
             
        
        }
        
        
        
        
        
        
    }//GEN-LAST:event_removerUtilizadorMouseClicked

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label;
    private javax.swing.JButton remover;
    private javax.swing.JButton removerUtilizador;
    private javax.swing.JList<String> utilizadoresCasa;
    private javax.swing.JList<String> utilizadoresSelecionados;
    // End of variables declaration//GEN-END:variables
}
